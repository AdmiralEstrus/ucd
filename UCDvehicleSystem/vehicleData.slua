vehicles = {}

addEventHandler("onResourceStart", resourceRoot, 
	function ()
		db:query(cacheVehicles, {}, "SELECT * FROM `vehicles`")
	end
)

function cacheVehicles(qh)
	local result = qh:poll(-1)
	
	for _, row in pairs(result) do
		vehicles[row.vehicleID] = {}
		for column, value in pairs(row) do
			if (column ~= "vehicleID") then
				vehicles[row.vehicleID][column] = value
			end
		end
	end
	
	outputDebugString("Finished caching vehicles.")
end

function setVehicleData(vehicleID, column, data)
	if (not vehicleID or not column or not data or not db) then return nil end
	if (tonumber(vehicleID) == nil or type(column) ~= "string") then return false end
	if (vehicles[vehicleID] == nil or vehicles[vehicleID][column] == nil) then
		return nil
	end
	
	vehicles[vehicleID][column] = data
	
	-- Rethink the automatic sync to the database
	if (vehicles[vehicleID]) then
		db:exec("UPDATE `vehicles` SET `??`=? WHERE `vehicleID`=?", column, data, vehicleID)
	end
	
	return true
end

function getVehicleData(vehicleID, column)
	if (not vehicleID) or (not column) then return nil end
	if (tonumber(vehicleID) == nil) or (type(column) ~= "string") then return false end
	
	if (vehicles[vehicleID] == nil) or (vehicles[vehicleID][column] == nil) then
		return nil
	end
	
	return vehicles[vehicleID][column]
end

function syncVehicleTable(plr)
	local accountID = exports.UCDaccounts:getPlayerAccountID(plr)
	for i, vehicleData in pairs(vehicles) do
		if (vehicleData.ownerID == accountID) then
			triggerLatentClientEvent(plr, "UCDvehicleSystem.syncVehicleTable", plr, i, vehicleData)
			outputDebugString("Got sync request. Sending data for vehicleID = "..i.." client-side.")
		end
	end
end
addEvent("UCDvehicleSystem.requestVehicleTableSync", true)
addEventHandler("UCDvehicleSystem.requestVehicleTableSync", root, function () syncVehicleTable(source) end)
addEventHandler("onPlayerLogin", root, function () syncVehicleTable(source) end)

function getPlayerVehicleTable(plr)
	-- Avoid MySQL as much as possible
	if (not plr or plr:getType() ~= "player") then return false end
	
	local vehicleTable = {}
	vehicleTable[plr] = {}
	
	local accountID = exports.UCDaccounts:getPlayerAccountID(plr)
	for i, v in pairs(vehicles) do
		if v.ownerID == accountID then
			vehicleTable[plr][i] = v
		end
	end
	
	return vehicleTable[plr]
end
